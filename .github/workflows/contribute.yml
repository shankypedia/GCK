name: GitHub Contribution Automator

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if today would normally be skipped'
        required: false
        default: 'false'
      commit_count:
        description: 'Override number of commits (leave empty for random)'
        required: false
        default: ''
  
  # Scheduled trigger - runs at a random-looking time each day
  schedule:
    # Run at 14:37 UTC daily (appears less automated than round hours)
    - cron: '37 14 * * *'

jobs:
  contribute:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      
      - name: Determine if today should be active
        id: check_active
        run: |
          FORCE_RUN="${{ github.event.inputs.force_run }}"
          if [[ "$FORCE_RUN" == "true" ]]; then
            echo "IS_ACTIVE=true" >> $GITHUB_OUTPUT
            echo "Forcing activity today due to manual override"
          else
            # Run the activity checker script
            IS_ACTIVE=$(bash ./scripts/utils.sh should_be_active)
            echo "IS_ACTIVE=$IS_ACTIVE" >> $GITHUB_OUTPUT
            
            if [[ "$IS_ACTIVE" == "true" ]]; then
              echo "Today is selected as an active day"
            else
              echo "Today is selected as an inactive day, skipping"
            fi
          fi
      
      - name: Make contributions
        if: steps.check_active.outputs.IS_ACTIVE == 'true'
        run: |
          # Configure git
          bash ./scripts/utils.sh setup_git
          
          # Get commit count (either from input or random)
          COMMIT_COUNT="${{ github.event.inputs.commit_count }}"
          if [[ -z "$COMMIT_COUNT" ]]; then
            # Generate random commit count if not specified
            COMMIT_COUNT=$(bash ./scripts/utils.sh random_commit_count)
          fi
          
          echo "Making $COMMIT_COUNT commits today"
          
          # Run the commit script
          bash ./scripts/commit_script.sh $COMMIT_COUNT
